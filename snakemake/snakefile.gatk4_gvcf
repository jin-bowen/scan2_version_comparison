# vim: syntax=python

rule gatk_gather:
    input:
        vcfs=lambda wildcards:
                expand("gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.vcf",
                       gatk_mmq=wildcards.gatk_mmq,
                       gatk_chunk=range(1, config['gatk_chunks']+1))
    output:
        vcf="gatk/hc_raw.mmq{gatk_mmq}.vcf"
    params:
        lambda wildcards, input:
            ' '.join([ "-I " + f for f in input ])
    resources:
        mem=4000
    benchmark:
        "gatk/gather_benchmark.mmq{gatk_mmq}.tsv"
    shell:
        "gatk GatherVcfs "
        "    --java-options '-Xmx3G -Xms3G'"
        "    {params} "
        "    -R {config[ref]}"
        "    -O {output.vcf}"


rule gatk_genotypegvcfs:
    input:
        gvcf="gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.gvcf.gz"
    output:
        vcf="gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.vcf"
    benchmark:
        "gatk/genotypegvcfs_benchmark.mmq{gatk_mmq}_chunk{gatk_chunk}.tsv"
    resources:
        mem=8000
    shell:
        "gatk GenotypeGVCFs"
        "   --java-options '-Xmx4G -Xms4G'"
        "   --dbsnp {config[dbsnp]}"
        "   -R {config[ref]}"
        "   -V {input}"
        "   -O {output}"


rule gatk_combinegvcfs:
    input:
        gvcfs=lambda wildcards:
                expand("gatk/{sample}/hc_raw.mmq{gatk_mmq}_chunk{{gatk_chunk}}.gvcf.gz",
                       sample=config['bam_map'].keys(),
                       gatk_mmq=wildcards.gatk_mmq,
                       gatk_chunk=range(1, config['gatk_chunks']+1))
    output:
        "gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.gvcf.gz"
    resources:
        mem=8000
    benchmark:
        "gatk/combinegvcfs_benchmark.mmq{gatk_mmq}_chunk{gatk_chunk}.tsv"
    params:
        infiles=lambda wildcards, input:
            ' '.join([ "--variant " + f for f in input ])
    shell:
        "gatk CombineGVCFs"
        "   --java-options '-Xmx8G -Xmx8G'"
        "   -R {config[ref]}"
        "   {params.infiles}"
        "   -O {output}"


rule gatk_scatter:
    input:
        bam=lambda wildcards: config['bam_map'][wildcards.sample]
    output:
        gvcf="gatk/{sample}/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.gvcf.gz"
    params:
        regionflag=lambda wildcards:
            "-L " + config['gatk_regions'][int(wildcards.gatk_chunk) - 1],
        mmq="{gatk_mmq}"
    resources:
        mem=4000
    benchmark:
        "gatk/{sample}/scatter_benchmark.mmq{gatk_mmq}_chunk{gatk_chunk}.tsv"
    shell:
        "gatk HaplotypeCaller"
        "    --java-options '-Xmx5000M -Xms5000M'"
        "    --dont-use-soft-clipped-bases"
        "    --dbsnp {config[dbsnp]}"
        "    --minimum-mapping-quality {params.mmq}"
        "    --emit-ref-confidence BP_RESOLUTION"
        "    --min-base-quality-score {config[min_base_quality_score]}"
        "    {params.regionflag}"
        "    -R {config[ref]}"
        "    -I {input}"
        "    -O {output}"
