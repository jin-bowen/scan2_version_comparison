# vim: syntax=python

rule gatk_gather:
    input:
        vcf=lambda wildcards:
                expand("gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.vcf",
                       gatk_mmq=wildcards.gatk_mmq,
                       gatk_chunk=range(1, config['gatk_chunks']+1))
    output:
        vcf="gatk/hc_raw.mmq{gatk_mmq}.vcf"
    params:
        lambda wildcards:
            ' '.join(expand("-I gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.vcf",
                            gatk_mmq=wildcards.gatk_mmq,
                            gatk_chunk=range(1, config['gatk_chunks']+1)))
    resources:
        mem=4000
    benchmark:
        "gatk/gather_benchmark.mmq{gatk_mmq}.tsv"
    shell:
        "gatk GatherVcfs"
        "    --java-options '-Xmx3G -Xms3G'"
        "    {params}"
        "    -R {config[ref]}"
        "    -O {output.vcf}"


rule gatk_scatter:
    input:
        bam=expand("{bam}", bam=config['bam_map'].values()),
    output:
        vcf=temp("gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.vcf"),
        vcfidx=temp("gatk/hc_raw.mmq{gatk_mmq}_chunk{gatk_chunk}.vcf.idx")
    params:
        bamlist=expand("-I {bam}", bam=config['bam_map'].values()),
        regionflag=lambda wildcards:
            "-L " + config['gatk_regions'][int(wildcards.gatk_chunk) - 1],
        mmq="{gatk_mmq}"
    resources:
        mem=10000
    benchmark:
        "gatk/scatter_benchmark.mmq{gatk_mmq}_chunk{gatk_chunk}.tsv"
    shell:
        "gatk HaplotypeCaller"
        "    --java-options '-Xmx3500M -Xms3500M'"
        "    --dont-use-soft-clipped-bases"
        "    --dbsnp {config[dbsnp]}"
        "    --minimum-mapping-quality {params.mmq}"
        "    --emit-ref-confidence NONE"
        "    {params.regionflag}"
        "    -R {config[ref]}"
        "    {params.bamlist}"
        "    -O {output.vcf}"
